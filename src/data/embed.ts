import { APIEmbed } from "discord-api-types";
import { EmbedField, MessageEmbed, MessageEmbedOptions } from "discord.js";
import { mokaBot } from "../resources/moka";
import { ttsConfig } from "../resources/tts";
import { getUnimplementedEmbedMessage } from "../utils/misc";
import { getMokaImgUrl } from "../utils/moka";
import { mokaColor } from "./color-palette";
import {
  MokaConfigCmd,
  MokaGeneralCmd,
  MokaLanguageCmd,
  MokaSupportedCmd,
  MokaSupportedCmdType,
  MokaTextCmd,
  MokaVoiceCmd,
} from "./moka-cmd";

type Embed = MessageEmbed | MessageEmbedOptions | APIEmbed;

interface CmdHelpField<T extends MokaSupportedCmd | MokaSupportedCmdType>
  extends EmbedField {
  name: `> ${string}`;
  value: `${string}**${T}**${string}`; // bold <cmd> <arg>
}

interface BreakEmbedField {
  name: "\u200b";
  value: "\u200b";
  inline: boolean;
}

export const getBreakEmbedField = (
  inline: boolean = false,
): BreakEmbedField => ({
  name: "\u200b",
  value: "\u200b",
  inline,
});

// * --- General
const generalCmdHelpFieldList: CmdHelpField<MokaGeneralCmd>[] = [
  {
    name: "> Tham gia v√†o voice channel",
    value: `**join**
      Tri·ªáu h·ªìi m√¨nh v√†o voice channel b·∫°n ƒëang ·ªü (‚òÖ‚Äø‚òÖ). B·∫°n nh·ªõ v√†o 1 k√™nh tr∆∞·ªõc nha
    `,
    inline: false,
  },
  {
    name: "> Ph√©p m√†u c·ªßa Moka",
    value: `**help**
      Tham kh·∫£o c√°c ph√©p m√†u m√† m√¨nh c√≥ th·ªÉ l√†m ƒë∆∞·ª£c (‚óãÔΩÄ 3‚Ä≤‚óã)
    `,
    inline: false,
  },
];

export const getGeneralHintEmbed = (): Embed => ({
  title: "L·ªánh chung c·ªßa Moka (‚úø‚ó†‚Äø‚ó†)",
  color: mokaColor.primary,
  thumbnail: { url: getMokaImgUrl("teasing") },
  description: `B·∫°n c√≥ th·ªÉ tham kh·∫£o c√°c l·ªánh t∆∞∆°ng t√°c chung chung ·ªü d∆∞·ªõi n√® nha

    `,

  fields: generalCmdHelpFieldList,
});

// * --- Config
const getConfigCmdHelpFieldList = (): CmdHelpField<MokaConfigCmd>[] => [
  {
    name: "> K√≠ t·ª± t∆∞∆°ng t√°c v·ªõi Moka",
    value: `**prefix** <k√≠ t·ª± m·ªõi>
      D√πng ƒë·ªÉ s·ª≠a d√πng ƒë·ªÉ t∆∞∆°ng t√°c v·ªõi m√¨nh nha. K√≠ t·ª± hi·ªán t·∫°i l√† **${mokaBot?.cmdPrefix}**.
    `,
    inline: false,
  },
];

export const getConfigHintEmbed = (): Embed => ({
  title: "S·ª≠a ƒë·ªïi t√πy ch·ªçn c·ªßa Moka",
  color: mokaColor.primary,
  thumbnail: { url: getMokaImgUrl("teasing") },
  description: `B·∫°n c√≥ th·ªÉ s·ª≠a ƒë·ªïi c√°c t√πy ch·ªçn c·ªßa Moka b·∫±ng c√°c l·ªánh d∆∞·ªõi n√®

    `,

  fields: getConfigCmdHelpFieldList(),
});

// * --- Text
const textCmdHelpFieldList: CmdHelpField<MokaTextCmd>[] = [
  {
    name: "> Moka xin ch√†o",
    value: `**hello** <t√™n ng∆∞·ªùi b·∫°n mu·ªën ch√†o | ƒë·ªÉ tr·ªëng n·∫øu mu·ªën m√¨nh ch√†o m·ªçi ng∆∞·ªùi lu√¥n>
      M√¨nh s·∫Ω ch√†o b·∫°n ·∫•y nha. M√† t√πy v√†o th·ªùi gian c·ªßa ng√†y, m√¨nh ch√†o kh√°c ƒë√≥. Th√¥ng minh ch∆∞a (‚óè'‚ó°'‚óè)
    `,
    inline: false,
  },
  {
    name: "> Ping pong! üèì",
    value: `**ping**
      Th·ª≠ ƒëi r√πi bi·∫øt
    `,
    inline: false,
  },
  {
    name: "> Ng·ªß ngon",
    value: `**goodnight**
      Moka s·∫Ω ch√∫c b·∫°n ng·ªß ngon nh√© üí§
    `,
    inline: false,
  },
];

export const getTextHintEmbed = (): Embed => ({
  title: "T∆∞∆°ng t√°c v·ªõi Moka (‚úø‚ó†‚Äø‚ó†)",
  color: mokaColor.primary,
  thumbnail: { url: getMokaImgUrl("teasing") },
  description: `B·∫°n c√≥ th·ªÉ t∆∞∆°ng t√°c nh·∫£m v·ªõi m√¨nh b·∫±ng c√°c l·ªánh d∆∞·ªõi hen

    `,

  fields: textCmdHelpFieldList,
});

// * --- Voice
const voiceCmdHelpFieldList: CmdHelpField<MokaVoiceCmd>[] = [
  {
    name: "> T·∫≠p ƒë·ªçc (/‚ñΩÔºº)",
    value: `**~** <c√¢u b·∫°n mu·ªën m√¨nh ƒë·ªçc>
      ƒê·ªçc c√¢u b·∫°n ch·ªâ ƒë·ªãnh n√®
    `,
    inline: false,
  },
];

export const getVoiceHintEmbed = (): Embed => ({
  title: "Moka t·∫≠p ƒë·ªçc ¬ß(*Ôø£‚ñΩÔø£*)¬ß",
  color: mokaColor.primary,
  thumbnail: { url: getMokaImgUrl("teasing") },
  description: `B·∫°n c√≥ th·ªÉ khi·∫øn m√¨nh n√≥i b·∫±ng l·ªánh ·ªü d∆∞·ªõi n√® nha

    `,

  fields: voiceCmdHelpFieldList,
});

// * --- Language
const languageCmdHelpFieldList: (
  | CmdHelpField<MokaLanguageCmd>
  | BreakEmbedField
)[] = [
  {
    name: "> Ng√¥n ng·ªØ hi·ªán t·∫°i",
    value: `**lang-info**
    Hi·ªÉn th·ªã th√¥ng tin v·ªÅ ng√¥n ng·ªØ hi·ªán t·∫°i
    `,
    inline: false,
  },
  {
    name: "> M√£ ng√¥n ng·ªØ",
    value: `**lang-code** <m√£ ng√¥n ng·ªØ>
      ƒê·ªïi m√£ ng√¥n ng·ªØ
      B·∫°n c√≥ th·ªÉ xem m√£ ng√¥n ng·ªØ h·ªó tr·ª£ t·∫°i [ƒë√¢y](https://cloud.google.com/text-to-speech/docs/voices) d∆∞·ªõi m·ª•c "Language code" ha
    `,
    inline: false,
  },
  {
    name: "> T√™n gi·ªçng n√≥i",
    value: `**voice** <t√™n gi·ªçng n√≥i>
      ƒê·ªïi t√™n gi·ªçng n√≥i
      B·∫°n c√≥ th·ªÉ coi t√™n gi·ªçng n√≥i h·ªó tr·ª£ t·∫°i [ƒë√¢y](https://cloud.google.com/text-to-speech/docs/voices) d∆∞·ªõi m·ª•c "Voice name" ha
    `,
    inline: false,
  },
];

export const getLanguageHintEmbed = (): Embed => ({
  title: "Ch·ªçn ng√¥n ng·ªØ (Ôø£y‚ñΩ,Ôø£)‚ï≠ ",
  color: mokaColor.primary,
  thumbnail: { url: getMokaImgUrl("teasing") },
  description: `${ttsConfig.getCurLanguageText()}

    B·∫°n c√≥ th·ªÉ ƒë·ªïi ng√¥n ng·ªØ ho·∫∑c xem ng√¥n ng·ªØ hi·ªán t·∫°i b·∫±ng c√°c l·ªánh d∆∞·ªõi

    `,

  fields: languageCmdHelpFieldList,
});

// * --- Help
const generalHelpFieldList: (
  | CmdHelpField<MokaSupportedCmdType>
  | BreakEmbedField
)[] = [
  {
    name: '> M·ª•c text (cho "hello", "ping", ...)',
    value: `help **text**
    Hi·ªÉn th·ªã th√¥ng tin v·ªÅ c√°ch chat t∆∞∆°ng t√°c v·ªõi m√¨nh üå∏
    ${getUnimplementedEmbedMessage()}
    `,
    inline: false,
  },
  {
    name: '> M·ª•c t√πy ch·ªânh (cho "prefix", ...)',
    value: `help **config**
      Hi·ªÉn th·ªã th√¥ng tin v·ªÅ c√°ch ƒëi·ªÅu ch·ªânh th√¥ng tin c·ªßa m√¨nh üå∏
      ${getUnimplementedEmbedMessage()}
    `,
    inline: false,
  },
  {
    name: '> M·ª•c t·ªïng qu√°t (cho "join", "help", ...)',
    value: `help **general**
      Hi·ªÉn th·ªã th√¥ng tin v·ªÅ c√°ch ƒëi·ªÅu ch·ªânh th√¥ng tin c·ªßa m√¨nh ü§ñ
      ${getUnimplementedEmbedMessage()}
    `,
    inline: false,
  },
  {
    name: `> M·ª•c gi·ªçng n√≥i (cho "~")`,
    value: `help **voice**
      Hi·ªÉn th·ªã th√¥ng tin v·ªÅ vi·ªác m√¨nh th√¨ th·∫ßm cho b·∫°n nghe üéµ
      ${getUnimplementedEmbedMessage()}
    `,
    inline: false,
  },
  {
    name: '> M·ª•c ng√¥n ng·ªØ (cho "voice", "lang-code", ...)',
    value: `help **language**
      Hi·ªÉn th·ªã th√¥ng tin v·ªÅ c√°ch ƒëi·ªÅu ch·ªânh ng√¥n ng·ªØ n√≥i c·ªßa m√¨nh üçô
    `,
    inline: false,
  },
];

export const getHelpEmbed = (): Embed => ({
  title: "Gi√∫p ƒë·ª° n√® o((>œâ< ))o",
  color: mokaColor.primary,
  thumbnail: { url: getMokaImgUrl("cute") },
  description: `B·∫°n c√≥ th·ªÉ coi th√™m th√¥ng tin cho t·ª´ng lo·∫°i l·ªánh b·∫±ng c√°c l·ªánh d∆∞·ªõi

    `,

  fields: generalHelpFieldList,
});
